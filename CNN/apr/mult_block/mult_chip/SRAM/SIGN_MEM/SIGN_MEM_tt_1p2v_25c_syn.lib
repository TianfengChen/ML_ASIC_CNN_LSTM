/*
 *      CONFIDENTIAL  AND  PROPRIETARY SOFTWARE OF ARM Physical IP, INC.
 *      
 *      Copyright (c) 1993-2022  ARM Physical IP, Inc.  All  Rights Reserved.
 *      
 *      Use of this Software is subject to the terms and conditions  of the
 *      applicable license agreement with ARM Physical IP, Inc.  In addition,
 *      this Software is protected by patents, copyright law and international
 *      treaties.
 *      
 *      The copyright notice(s) in this Software does not indicate actual or
 *      intended publication of this Software.
 *      
 *      name:			High Speed/Density Single Port SRAM Generator
 *           			IBM CMRF8SF-LPVT Process
 *      version:		2008Q3V1
 *      comment:		
 *      configuration:	 -instname "SIGN_MEM" -words 4096 -bits 16 -frequency 100 -ring_width 4.0 -mux 16 -write_mask off -wp_size 8 -top_layer met4 -power_type rings -horiz met4 -vert met3 -cust_comment "" -bus_notation on -left_bus_delim "[" -right_bus_delim "]" -pwr_gnd_rename "VDD:VDD,GND:VSS" -prefix "" -pin_space 0.0 -name_case upper -check_instname on -diodes on -inside_ring_type GND -drive 6 -asvm on -libname "SIGN_MEM" -corners ff_1p32v_m40c,ff_1p65v_125c,tt_1p2v_25c,ss_1p08v_125c
 *
 *      Synopsys model for Synchronous Single-Port Ram
 *
 *      Library Name:   SIGN_MEM
 *      Instance Name:  SIGN_MEM
 *      Words:          4096
 *      Word Width:     16
 *      Mux:            16
 *      Corner:        tt_1p2v_25c
 *
 *      Creation Date:  2022-03-12 22:40:56Z
 *      Version:        2008Q3V1
 *
 *      Verified With: Synopsys Design Compiler
 *
 *      Modeling Assumptions: This library contains a black box description
 *          for a memory element.  At the library level, a
 *          default_max_transition constraint is set to the maximum
 *          characterized input slew.  Each output has a max_capacitance
 *          constraint set to the highest characterized output load.  These two
 *          constraints force Design Compiler to synthesize circuits that
 *          operate within the characterization space.  The user can tighten
 *          these constraints, if desired.  When writing SDF from Design
 *          Compiler, use the version 2.1 option.  This ensures the SDF will
 *          annotate to simulation models provided with this generator.
 *
 *      Modeling Limitations: 
 *          Due to limitations of the .lib format, some data reduction was
 *          necessary.  When reducing data, minimum values were chosen for the
 *          fast case corner and maximum values were used for the typical and
 *          best case corners.  It is recommended that critical timing and
 *          setup and hold times be checked at all corners.
 *
 *      Known Bugs: None.
 *
 *      Known Work Arounds: N/A
 *
 */

library(SIGN_MEM) {
	delay_model		: table_lookup;
	revision		: 1.1;	
	date			: "2022-03-12 22:40:56Z";
	comment			: "Confidential Information of ARM Physical IP, Inc.  Use subject to ARM Physical IP, Inc. license.  Copyright (c) 1993-2022 ARM Physical IP, Inc.";
	time_unit		: "1ns";
	voltage_unit		: "1V";
	current_unit		: "1mA";
	leakage_power_unit	: "1mW";
	nom_process		: 1;
	nom_temperature		: 25.000;
	nom_voltage		: 1.200;
	capacitive_load_unit	 (1,pf);

	pulling_resistance_unit	        : "1kohm";

	/* additional header data */
	default_cell_leakage_power      : 0;
	default_fanout_load		: 1;
	default_inout_pin_cap		: 0.005;
	default_input_pin_cap		: 0.005;
	default_output_pin_cap		: 0.0;
	default_max_transition		: 1.000;

        /* default attributes */
        default_leakage_power_density : 0.0;
        slew_derate_from_library      : 1.000;
        slew_lower_threshold_pct_fall : 10.000;
        slew_upper_threshold_pct_fall : 90.000;
        slew_lower_threshold_pct_rise : 10.000;
        slew_upper_threshold_pct_rise : 90.000;
        input_threshold_pct_fall      : 50.000;
        input_threshold_pct_rise      : 50.000;
        output_threshold_pct_fall     : 50.000;
        output_threshold_pct_rise     : 50.000;

 	/* k-factors */
 	k_process_cell_fall             : 1;
 	k_process_cell_leakage_power    : 0;
 	k_process_cell_rise             : 1;
 	k_process_fall_transition       : 1;
 	k_process_hold_fall             : 1;
 	k_process_hold_rise             : 1;
 	k_process_internal_power        : 0;
 	k_process_min_pulse_width_high  : 1;
 	k_process_min_pulse_width_low   : 1;
 	k_process_pin_cap               : 0;
 	k_process_recovery_fall         : 1;
 	k_process_recovery_rise         : 1;
 	k_process_rise_transition       : 1;
 	k_process_setup_fall            : 1;
 	k_process_setup_rise            : 1;
 	k_process_wire_cap              : 0;
 	k_process_wire_res              : 0;
	k_temp_cell_fall		: 0.000;
	k_temp_cell_rise		: 0.000;
	k_temp_hold_fall                : 0.000;
	k_temp_hold_rise                : 0.000;
	k_temp_min_pulse_width_high     : 0.000;
	k_temp_min_pulse_width_low      : 0.000;
	k_temp_min_period               : 0.000;
	k_temp_rise_propagation         : 0.000;
	k_temp_fall_propagation         : 0.000;
	k_temp_rise_transition          : 0.0;
	k_temp_fall_transition          : 0.0;
	k_temp_recovery_fall            : 0.000;
	k_temp_recovery_rise            : 0.000;
	k_temp_setup_fall               : 0.000;
	k_temp_setup_rise               : 0.000;
	k_volt_cell_fall                : 0.000;
	k_volt_cell_rise                : 0.000;
	k_volt_hold_fall                : 0.000;
	k_volt_hold_rise                : 0.000;
	k_volt_min_pulse_width_high     : 0.000;
	k_volt_min_pulse_width_low      : 0.000;
	k_volt_min_period               : 0.000;
	k_volt_rise_propagation         : 0.000;
	k_volt_fall_propagation         : 0.000;
	k_volt_rise_transition	        : 0.0;
	k_volt_fall_transition	        : 0.0;
	k_volt_recovery_fall            : 0.000;
	k_volt_recovery_rise            : 0.000;
	k_volt_setup_fall               : 0.000;
	k_volt_setup_rise               : 0.000;


        operating_conditions(tt_1p2v_25c) {
		process	 : 1;
		temperature	 : 25.000;
		voltage	 : 1.200;
		tree_type	 : balanced_tree;
	}
        default_operating_conditions : tt_1p2v_25c;
	wire_load("sample") {
		resistance	 : 1.6e-05;
		capacitance	 : 0.0002;
		area	 : 1.7;
  		slope	 : 500;
		fanout_length	 (1,500);
	}
        lu_table_template(SIGN_MEM_bist_mux_delay_template) {
           variable_1 : input_net_transition;
           variable_2 : total_output_net_capacitance;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
               index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
        lu_table_template(SIGN_MEM_mux_mem_out_delay_template) {
           variable_1 : input_net_transition;
           variable_2 : total_output_net_capacitance;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
               index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
        lu_table_template(SIGN_MEM_mem_out_delay_template) {
           variable_1 : input_net_transition;
           variable_2 : total_output_net_capacitance;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
               index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
	lu_table_template(SIGN_MEM_bist_mux_slew_template) {
           variable_1 : total_output_net_capacitance;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
	lu_table_template(SIGN_MEM_mem_out_slew_template) {
           variable_1 : total_output_net_capacitance;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
	lu_table_template(SIGN_MEM_clk_setup_constraint_template) {
           variable_1 : related_pin_transition;
           variable_2 : constrained_pin_transition;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
               index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
	lu_table_template(SIGN_MEM_constraint_template) {
           variable_1 : related_pin_transition;
           variable_2 : constrained_pin_transition;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
               index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
        power_lut_template(SIGN_MEM_energy_template_clkslew_load) {
           variable_1 : input_transition_time;
           variable_2 : total_output_net_capacitance;
               index_1 ("1000, 1001");
               index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
        power_lut_template(SIGN_MEM_energy_template_sigslew_load) {
           variable_1 : input_transition_time;
           variable_2 : total_output_net_capacitance;
               index_1 ("1000, 1001");
               index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
        power_lut_template(SIGN_MEM_energy_template_load) {
           variable_1 : total_output_net_capacitance;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
        power_lut_template(SIGN_MEM_energy_template_clkslew) {
           variable_1 : input_transition_time;
               index_1 ("1000, 1001");
        }
        power_lut_template(SIGN_MEM_energy_template_sigslew) {
           variable_1 : input_transition_time;
               index_1 ("1000, 1001");
        }
	library_features(report_delay_calculation);
	type (SIGN_MEM_DATA) {
		base_type : array ;
		data_type : bit ;
		bit_width : 16;
		bit_from : 15;
		bit_to : 0 ;
		downto : true ;
	}
	type (SIGN_MEM_UPM) {
		base_type : array ;
		data_type : bit ;
		bit_width : 3;
		bit_from : 2;
		bit_to : 0 ;
		downto : true ;
	}
	type (SIGN_MEM_ADDRESS) {
		base_type : array ;
		data_type : bit ;
		bit_width : 12;
		bit_from : 11;
		bit_to : 0 ;
		downto : true ;
	}
cell(SIGN_MEM) {
	area		 : 213748.260;
	dont_use	 : TRUE;
	dont_touch	 : TRUE;
        interface_timing : TRUE;
	memory() {
		type : ram;
		address_width : 12;
		word_width : 16;
	}
        bus(Q)   {
                bus_type : SIGN_MEM_DATA;
		direction : output;
		max_capacitance : 0.960;
                memory_read() {
			address : A;
		}
                timing() {
                        related_pin :   "CLK" ;
                        timing_type : rising_edge ;
                        timing_sense : non_unate;
                        cell_rise(SIGN_MEM_mem_out_delay_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.800, 1.000");
                        index_2 ("0.000, 0.025, 0.050, 0.125, 0.250, 0.500, 0.960");
                        values ( \
                          "4.106, 4.128, 4.150, 4.217, 4.327, 4.549, 4.956", \
                          "4.123, 4.145, 4.167, 4.234, 4.344, 4.566, 4.973", \
                          "4.144, 4.167, 4.189, 4.255, 4.366, 4.587, 4.995", \
                          "4.187, 4.209, 4.232, 4.298, 4.409, 4.630, 5.038", \
                          "4.273, 4.295, 4.317, 4.384, 4.494, 4.716, 5.123", \
                          "4.444, 4.466, 4.488, 4.555, 4.666, 4.887, 5.294", \
                          "4.530, 4.552, 4.574, 4.640, 4.751, 4.973, 5.380" \
                        )
                        }
                        rise_transition(SIGN_MEM_mem_out_slew_template) {
                        index_1 ("0.000, 0.025, 0.050, 0.125, 0.250, 0.500, 0.960");
                        values ("0.044, 0.085, 0.126, 0.249, 0.454, 0.864, 1.618")
                        }
                        cell_fall(SIGN_MEM_mem_out_delay_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.800, 1.000");
                        index_2 ("0.000, 0.025, 0.050, 0.125, 0.250, 0.500, 0.960");
                        values ( \
                          "4.106, 4.128, 4.150, 4.217, 4.327, 4.549, 4.956", \
                          "4.123, 4.145, 4.167, 4.234, 4.344, 4.566, 4.973", \
                          "4.144, 4.167, 4.189, 4.255, 4.366, 4.587, 4.995", \
                          "4.187, 4.209, 4.232, 4.298, 4.409, 4.630, 5.038", \
                          "4.273, 4.295, 4.317, 4.384, 4.494, 4.716, 5.123", \
                          "4.444, 4.466, 4.488, 4.555, 4.666, 4.887, 5.294", \
                          "4.530, 4.552, 4.574, 4.640, 4.751, 4.973, 5.380" \
                        )
                        }
                        fall_transition(SIGN_MEM_mem_out_slew_template) {
                        index_1 ("0.000, 0.025, 0.050, 0.125, 0.250, 0.500, 0.960");
                        values ("0.070, 0.115, 0.161, 0.296, 0.523, 0.975, 1.808")
                        }
                }
        }
        pin(CLK)   {
		direction : input;
		capacitance : 0.135;
                clock : true;
                max_transition : 1.000;
                min_pulse_width_high : 0.161 ;
                min_pulse_width_low  : 0.343 ;
                min_period           : 4.272 ;


                internal_power(){
                        when : "(!CEN & ! \
                                 (WEN) \
                                ) \
                                 ";
                        rise_power(SIGN_MEM_energy_template_clkslew) {
                        index_1 ("0.000, 1.000");
                        values ("87.086, 87.086")
                        }
                        fall_power(SIGN_MEM_energy_template_clkslew) {
                        index_1 ("0.000, 1.000");
                        values ("0.000, 0.000")
                        }
                }
                internal_power(){
                        when : "(!CEN & \
                                 (WEN) \
                                ) \
                                 ";
                        rise_power(SIGN_MEM_energy_template_clkslew) {
                        index_1 ("0.000, 1.000");
                        values ("79.829, 79.829")
                        }
                        fall_power(SIGN_MEM_energy_template_clkslew) {
                        index_1 ("0.000, 1.000");
                        values ("0.000, 0.000")
                        }
                }
         internal_power(){
                 when : "(CEN)";
                        rise_power(SIGN_MEM_energy_template_clkslew) {
                        index_1 ("0.000, 1.000");
                        values ("0.019, 0.019")
                        }
                        fall_power(SIGN_MEM_energy_template_clkslew) {
                        index_1 ("0.000, 1.000");
                        values ("0.000, 0.000")
                        }
                }
        }

        pin(CEN)   {
                direction : input;
                capacitance : 0.006;
                timing() {
                        related_pin     : CLK;
                        timing_type     : setup_rising ;
                        rise_constraint(SIGN_MEM_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.800, 1.000");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.800, 1.000");
                        values ( \
                          "0.665, 0.681, 0.701, 0.740, 0.818, 0.975, 1.053", \
                          "0.648, 0.664, 0.684, 0.723, 0.801, 0.958, 1.036", \
                          "0.627, 0.643, 0.662, 0.701, 0.780, 0.936, 1.015", \
                          "0.584, 0.600, 0.619, 0.658, 0.737, 0.893, 0.972", \
                          "0.498, 0.514, 0.534, 0.573, 0.651, 0.808, 0.886", \
                          "0.327, 0.343, 0.362, 0.402, 0.480, 0.637, 0.715", \
                          "0.242, 0.257, 0.277, 0.316, 0.394, 0.551, 0.629" \
                        )
                        }
                        fall_constraint(SIGN_MEM_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.800, 1.000");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.800, 1.000");
                        values ( \
                          "0.622, 0.636, 0.654, 0.689, 0.760, 0.902, 0.973", \
                          "0.605, 0.619, 0.637, 0.672, 0.743, 0.885, 0.956", \
                          "0.583, 0.597, 0.615, 0.651, 0.722, 0.864, 0.935", \
                          "0.540, 0.555, 0.572, 0.608, 0.679, 0.821, 0.892", \
                          "0.455, 0.469, 0.487, 0.522, 0.593, 0.735, 0.806", \
                          "0.284, 0.298, 0.316, 0.351, 0.422, 0.564, 0.635", \
                          "0.198, 0.212, 0.230, 0.265, 0.336, 0.478, 0.549" \
                        )
                        }
                } 
                timing() {
                        related_pin     : CLK;
                        timing_type     : hold_rising ;
                        rise_constraint(SIGN_MEM_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.800, 1.000");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.800, 1.000");
                        values ( \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.171, 0.155, 0.136, 0.096, 0.018, 0.000, 0.000", \
                          "0.256, 0.241, 0.221, 0.182, 0.104, 0.000, 0.000" \
                        )
                        }
                        fall_constraint(SIGN_MEM_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.800, 1.000");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.800, 1.000");
                        values ( \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.004, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.089, 0.075, 0.057, 0.022, 0.000, 0.000, 0.000" \
                        )
                        }
               }
        }
        pin(WEN){
                direction : input;
                capacitance : 0.010;
                timing() {
                        related_pin     : CLK;
                        timing_type     : setup_rising ;
                        rise_constraint(SIGN_MEM_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.800, 1.000");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.800, 1.000");
                        values ( \
                          "0.509, 0.525, 0.545, 0.585, 0.666, 0.827, 0.908", \
                          "0.491, 0.508, 0.528, 0.568, 0.649, 0.810, 0.890", \
                          "0.470, 0.486, 0.506, 0.547, 0.627, 0.788, 0.869", \
                          "0.427, 0.443, 0.463, 0.504, 0.584, 0.746, 0.826", \
                          "0.342, 0.358, 0.378, 0.418, 0.499, 0.660, 0.741", \
                          "0.170, 0.186, 0.207, 0.247, 0.328, 0.489, 0.569", \
                          "0.085, 0.101, 0.121, 0.161, 0.242, 0.403, 0.484" \
                        )
                        }
                        fall_constraint(SIGN_MEM_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.800, 1.000");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.800, 1.000");
                        values ( \
                          "0.701, 0.715, 0.733, 0.768, 0.839, 0.981, 1.052", \
                          "0.684, 0.698, 0.716, 0.751, 0.822, 0.964, 1.035", \
                          "0.662, 0.677, 0.694, 0.730, 0.801, 0.943, 1.014", \
                          "0.620, 0.634, 0.651, 0.687, 0.758, 0.900, 0.971", \
                          "0.534, 0.548, 0.566, 0.601, 0.672, 0.814, 0.885", \
                          "0.363, 0.377, 0.395, 0.430, 0.501, 0.643, 0.714", \
                          "0.277, 0.291, 0.309, 0.344, 0.415, 0.557, 0.628" \
                        )
                        }
                } 
                timing() {
                        related_pin     : CLK;
                        timing_type     : hold_rising ;
                        rise_constraint(SIGN_MEM_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.800, 1.000");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.800, 1.000");
                        values ( \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000" \
                        )
                        }
                        fall_constraint(SIGN_MEM_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.800, 1.000");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.800, 1.000");
                        values ( \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000" \
                        )
                        }
               }
        }
        bus(A)   {
                bus_type : SIGN_MEM_ADDRESS;
                direction : input;
                capacitance : 0.027;
                timing() {
                        related_pin     : CLK;
                        timing_type     : setup_rising ;
                        rise_constraint(SIGN_MEM_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.800, 1.000");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.800, 1.000");
                        values ( \
                          "0.706, 0.718, 0.733, 0.763, 0.822, 0.941, 1.000", \
                          "0.689, 0.701, 0.716, 0.746, 0.805, 0.923, 0.983", \
                          "0.668, 0.680, 0.695, 0.724, 0.783, 0.902, 0.961", \
                          "0.625, 0.637, 0.652, 0.681, 0.741, 0.859, 0.918", \
                          "0.539, 0.551, 0.566, 0.596, 0.655, 0.774, 0.833", \
                          "0.368, 0.380, 0.395, 0.425, 0.484, 0.602, 0.662", \
                          "0.283, 0.294, 0.309, 0.339, 0.398, 0.517, 0.576" \
                        )
                        }
                        fall_constraint(SIGN_MEM_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.800, 1.000");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.800, 1.000");
                        values ( \
                          "0.290, 0.301, 0.315, 0.342, 0.396, 0.504, 0.558", \
                          "0.273, 0.284, 0.298, 0.325, 0.379, 0.487, 0.541", \
                          "0.252, 0.263, 0.276, 0.303, 0.357, 0.465, 0.519", \
                          "0.209, 0.220, 0.233, 0.260, 0.314, 0.422, 0.476", \
                          "0.123, 0.134, 0.148, 0.175, 0.229, 0.337, 0.391", \
                          "-0.048, -0.037, -0.024, 0.003, 0.057, 0.165, 0.219", \
                          "-0.133, -0.123, -0.109, -0.082, -0.028, 0.080, 0.134" \
                        )
                        }
                } 
                timing() {
                        related_pin     : CLK;
                        timing_type     : hold_rising ;
                        rise_constraint(SIGN_MEM_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.800, 1.000");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.800, 1.000");
                        values ( \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.050, 0.038, 0.023, 0.000, 0.000, 0.000, 0.000", \
                          "0.221, 0.209, 0.195, 0.165, 0.106, 0.000, 0.000", \
                          "0.307, 0.295, 0.280, 0.251, 0.191, 0.073, 0.013" \
                        )
                        }
                        fall_constraint(SIGN_MEM_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.800, 1.000");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.800, 1.000");
                        values ( \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.014, 0.003, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.057, 0.046, 0.033, 0.006, 0.000, 0.000, 0.000", \
                          "0.143, 0.132, 0.118, 0.091, 0.037, 0.000, 0.000", \
                          "0.314, 0.303, 0.289, 0.262, 0.208, 0.100, 0.046", \
                          "0.399, 0.389, 0.375, 0.348, 0.294, 0.186, 0.132" \
                        )
                        }
               }
                internal_power(){
                        when : "CEN";
                        rise_power(SIGN_MEM_energy_template_sigslew) {
                        index_1 ("0.000, 1.000");
                        values ("0.359, 0.359")
                        }
                        fall_power(SIGN_MEM_energy_template_sigslew) {
                        index_1 ("0.000, 1.000");
                        values ("0.359, 0.359")
                        }
                }
        }
        bus(D)   {
                bus_type : SIGN_MEM_DATA;
                memory_write() {
                        address : A;
                        clocked_on : "CLK";
                }
                direction : input;
                capacitance : 0.002;
                timing() {
                        related_pin     : CLK;
                        timing_type     : setup_rising ;
                        rise_constraint(SIGN_MEM_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.800, 1.000");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.800, 1.000");
                        values ( \
                          "0.420, 0.434, 0.452, 0.488, 0.559, 0.702, 0.774", \
                          "0.403, 0.417, 0.435, 0.471, 0.542, 0.685, 0.756", \
                          "0.381, 0.396, 0.413, 0.449, 0.521, 0.664, 0.735", \
                          "0.338, 0.353, 0.371, 0.406, 0.478, 0.621, 0.692", \
                          "0.253, 0.267, 0.285, 0.321, 0.392, 0.535, 0.607", \
                          "0.082, 0.096, 0.114, 0.150, 0.221, 0.364, 0.435", \
                          "-0.004, 0.010, 0.028, 0.064, 0.135, 0.278, 0.350" \
                        )
                        }
                        fall_constraint(SIGN_MEM_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.800, 1.000");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.800, 1.000");
                        values ( \
                          "0.271, 0.285, 0.303, 0.338, 0.409, 0.551, 0.621", \
                          "0.254, 0.268, 0.286, 0.321, 0.392, 0.533, 0.604", \
                          "0.233, 0.247, 0.265, 0.300, 0.371, 0.512, 0.583", \
                          "0.190, 0.204, 0.222, 0.257, 0.328, 0.469, 0.540", \
                          "0.104, 0.118, 0.136, 0.172, 0.242, 0.384, 0.454", \
                          "-0.067, -0.053, -0.035, 0.000, 0.071, 0.212, 0.283", \
                          "-0.153, -0.138, -0.121, -0.085, -0.015, 0.127, 0.197" \
                        )
                        }
                } 
                timing() {
                        related_pin     : CLK;
                        timing_type     : hold_rising ;
                        rise_constraint(SIGN_MEM_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.800, 1.000");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.800, 1.000");
                        values ( \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.034, 0.020, 0.002, 0.000, 0.000, 0.000, 0.000", \
                          "0.119, 0.105, 0.087, 0.052, 0.000, 0.000, 0.000" \
                        )
                        }
                        fall_constraint(SIGN_MEM_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.800, 1.000");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.800, 1.000");
                        values ( \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.085, 0.071, 0.053, 0.018, 0.000, 0.000, 0.000", \
                          "0.256, 0.242, 0.224, 0.189, 0.118, 0.000, 0.000", \
                          "0.342, 0.328, 0.310, 0.274, 0.204, 0.062, 0.000" \
                        )
                        }
               }
        }

        cell_leakage_power : 5.37E-4;
}
}
